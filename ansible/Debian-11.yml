#!/usr/bin/env ansible-playbook
#
#TODO: move network settings to role
#TODO: integrate with bitwarden
#TODO: nftables with roles
#TODO: negative look ahead expressions in configs
#TODO: service restart on config change notifications
#TODO: zabbix templates for systemd smartmontools
#TODO: postfix
#TODO: firewall
#TODO: vim config
#TODO: zsh config
#TODO: netbios lookup
- name: 
    Debian postinstallation
  hosts: 
    linux_postinstall
  environment:
    testenv: shit
  roles:
     - hudecof.grub-password
  vars:
    ansible_user: "root"
    ansible_ssh_pass: "ansible"
    neofetchline: neofetch --ascii /etc/motd.fetch --color_blocks off --disable packages
    fusioninventory_server: "server=http://relay1.sodrk.ru:62330/plugins/fusioninventory"
    hostname: ansible-host
    ntpconf: /etc/chrony/chrony.conf
    saltconf: /etc/salt/minion
    zabbixserver: zabbix.sodrk.ru
    zabbixmetadata: sodrk
    salt:
      - salt.sodrk.ru
    ntp:
      - 0.ru.pool.ntp.org
      - 1.ru.pool.ntp.org
      - 2.ru.pool.ntp.org
      - 3.ru.pool.ntp.org
    dns: 
      - 77.88.8.8
      - 77.88.8.1
    ip: 10.149.99.202
    mask: 24
    gateway: 192.168.1.254
    grub_password_v2_admin: sodadmin
    grub_password_v2_passwd: grub.pbkdf2.sha512.10000.50C2E02BA34DD1B6C227FC0D32CF0293A1184EAD4AB1D232E128999D825B94BDFF64B96D95C650092ECBEC2A83CAD6E6DBD28662E151CF224F9F26BB8F5479CE.E8D7A44A3ABCEB2269099F35566F06FD848A8F63F5A45A7E83D78BD64EAA9DF21C122BC056D2AD88F74F23AFA982BCF1919EE04D4653B90F374CAC9361B2E57B
    packages_to_install:
     - vim
     - mlocate
     - openssh-server
     - bash-completion
     - zsh
     - auditd
     - strace
     - nmap
     - tcpdump
     - wireshark
     - tshark
     - zabbix-agent
     - perl
     - git
     - wget
     - curl
     - tmux
     - neofetch
     - nftables
     - smartmontools
     - apt-file
     - nftables
     - net-tools
     - gdisk
     - unzip
     - build-essential
     - automake
     - autotools-dev
     - acl
     - hwinfo
     - ethtool
     - fusioninventory-agent
     - samba
     - chrony
     - salt-minion
     - sudo
     - bind9-dnsutils
  tasks:
   - name: install packages
     apt: 
       name: "{{ packages_to_install }}"
       state: latest
       upgrade: full
       update_cache: yes
   - name: apt-file update
     shell: apt-file update
     become: True
   - name: update mlocate cache
     shell: updatedb
     become: True
   - name: update smart DB
     shell: update-smart-drivedb
     become: True
   - name: update GRUB
     shell: update-grub
     become: True
   - name: set a hostname
     ansible.builtin.hostname:
       #       use: generic
       name: "{{ hostname }}"
         #     become: True
   - name: set timezone
     community.general.timezone:
       name: Europe/Moscow
       hwclock: UTC
   - name: disable IPv6 (1)
     ansible.posix.sysctl:
       name: net.ipv6.conf.all.disable_ipv6
       value: '1'
       sysctl_set: yes
       reload: yes
       sysctl_file: /etc/sysctl.d/99-sysctl.conf
   - name: disable IPv6 (2)
     ansible.posix.sysctl:
       name: net.ipv6.conf.default.disable_ipv6
       value: '1'
       sysctl_set: yes
       reload: yes
       sysctl_file: /etc/sysctl.d/99-sysctl.conf
   - name: UDEV rules
     ansible.builtin.lineinfile:
       path: /etc/udev/rules.d/10-persistent.rules
       regexp: "{{ansible_facts[item].macaddress}}"
       line: ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="{{ansible_facts[item].macaddress}}", NAME="nic{{index+1}}"
       create: yes
     when: ansible_facts[item].type=="ether"
     loop: "{{ ansible_interfaces | reject('search','lo') | list}}"
     loop_control:
       index_var: index
   - name: rm resolv.conf
     file:
       path: /etc/resolv.conf
       state: absent
   - name: set static DNSes
     lineinfile:
       path: /etc/resolv.conf
       line: "nameserver {{item}}"
       state: present
       group: root
       owner: root
       mode: 644
       create: yes
     loop: "{{dns}}"
   - name: network.service set up
     template:
       src: templates/network.service.j2
       dest: /etc/systemd/system/network.service
   - name: disable old networking
     ansible.builtin.systemd:
       name: networking
       enabled: no
   - name: enable new networking
     ansible.builtin.systemd:
       name: network
       enabled: yes 
   - name: motd file
     ansible.builtin.copy:
       src: files/motd.fetch
       dest: /etc/motd.fetch
       owner: root
       group: root
       mode: '0644'
   - name: motd file start
     ansible.builtin.lineinfile:
       path: /etc/profile
       regexp: "{{neofetchline}}" 
       line: "{{neofetchline}}"
   - name: fusioninventory-agent
     ansible.builtin.lineinfile:
       path: /etc/fusioninventory/agent.cfg
       regexp: "{{fusioninventory_server}}" 
       line: "{{fusioninventory_server}}"
   - name: enable fusion inventory
     ansible.builtin.systemd:
       name: fusioninventory-agent
       enabled: yes 
   - name: initial run fusion-inventory
     shell: fusioninventory-agent -f 
     become: True
   - name: disable smbd
     ansible.builtin.systemd:
       name: smbd
       enabled: no 
   - name: enable nmbd
     ansible.builtin.systemd:
       name: nmbd
       enabled: yes 
   - name: enable chrony
     ansible.builtin.systemd:
       name: chrony
       enabled: yes 
   - name: enable salt
     ansible.builtin.systemd:
       name: salt-minion
       enabled: yes 
   - name: remove standart pools and servers
     replace:
       path: "{{ntpconf}}"
       regexp: '^\s*(pool.*|server.*)'
       replace: '#\1'
   - name: set ntps
     lineinfile:
       path: "{{ntpconf}}"
       line: "server {{item}}"
       state: present
       group: root
       owner: root
       mode: 644
       create: yes
       insertbefore: BOF
     loop: "{{ntp}}"
   - name: remove all other servers
     replace:
       path: "{{saltconf}}"
       regexp: '^\s*(master.*)'
       replace: '#\1'
   - name: set salt master
     lineinfile:
       path: "{{saltconf}}"
       line: "master: {{item}}"
       state: present
       group: root
       owner: root
       mode: 644
       create: yes
       insertbefore: BOF
     loop: "{{salt}}"
   - name: ssh config copy
     ansible.builtin.copy:
       src: files/sshd_config
       dest: /etc/ssh/sshd_config
       owner: root
       group: root
       mode: '0644'
   - name: certs directory
     file:
       path: /root/.ssh
       state: directory
   - name: ssh public key copy
     ansible.builtin.copy:
       src: files/ansible.pub
       dest: /root/.ssh/authorized_keys
       owner: root
       group: root
       mode: '0644'
   - name: zabbix config
     template:
       src: templates/zabbix_agentd.conf.j2
       dest: /etc/zabbix/zabbix_agentd.conf
   - name: sodadmin settings
     ansible.builtin.user:
       name: sodadmin
       shell: /usr/bin/zsh
       groups: sodadmin, sudo
       password: $6$9dXXSI3FrYuC7MhQ$ugtpv4vplq8ArK7AwrkjNCEfw3hrGflqwifOt41yvRVRx.mqWNghzCnRLUsjneoLsOkaIVCDCGW49O58DMQGG.
   - name: root settings
     ansible.builtin.user:
       name: root
       shell: /usr/bin/zsh
       password: $6$944CjpxV6lyBr5.N$K0DUptXZLz.acgYB77jNe8J.Xm2ShcpL4A.CWmOxoXTWEKXF8Lp0Qwlv7KDdlz7s9Ru0j9HTESdpXLJ3iTR7P.
